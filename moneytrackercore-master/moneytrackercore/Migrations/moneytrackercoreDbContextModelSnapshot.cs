// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using moneytrackercore.Data;

namespace moneytrackercore.Migrations
{
    [DbContext(typeof(moneytrackercoreDbContext))]
    partial class moneytrackercoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("moneytrackercore.data.Entities.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BalanceAmount");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Balance");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Expenditure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountSpent");

                    b.Property<int?>("BalanceId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<int?>("IncomesId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.HasIndex("IncomesId");

                    b.ToTable("Expenditure");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.ExpenditureConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpenditureCategory");

                    b.HasKey("Id");

                    b.ToTable("ExpenditureConfig");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Incomes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountEarned");

                    b.Property<int?>("BalanceId");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.IncomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IncomeTypeConfig");

                    b.HasKey("Id");

                    b.ToTable("IncomeType");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.PaymentMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentConfig");

                    b.HasKey("Id");

                    b.ToTable("PaymentMode");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalanceId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("BalanceId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Expenditure", b =>
                {
                    b.HasOne("moneytrackercore.data.Entities.Balance")
                        .WithMany("Expenditure")
                        .HasForeignKey("BalanceId");

                    b.HasOne("moneytrackercore.data.Entities.Incomes")
                        .WithMany("Expenditure")
                        .HasForeignKey("IncomesId");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Incomes", b =>
                {
                    b.HasOne("moneytrackercore.data.Entities.Balance")
                        .WithMany("Incomes")
                        .HasForeignKey("BalanceId");
                });

            modelBuilder.Entity("moneytrackercore.data.Entities.Users", b =>
                {
                    b.HasOne("moneytrackercore.data.Entities.Balance", "Balance")
                        .WithMany()
                        .HasForeignKey("BalanceId");
                });
#pragma warning restore 612, 618
        }
    }
}
